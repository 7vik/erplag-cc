enum ter{AND,ARRAY,ASSIGNOP,BC,BO,BOOLEAN,BREAK,CASE,COLON,COMMA,DECLARE,DEF,DEFAULT,DIV,DRIVER,DRIVERDEF,DRIVERENDDEF,END,ENDDEF,EQ,FALSE,FOR,GE,GET_VALUE,GT,IN,INPUT,INTEGER,LE,LT,MINUS,MODULE,MUL,NE,NUM,OF,OR,PARAMETERS,PLUS,PRINT,PROGRAM,RANGEOP,REAL,RETURNS,RNUM,SEMICOL,SQBC,SQBO,START,SWITCH,TAKES,TRUE,USE,WHILE,WITH};

enum nt{arithmeticExpr,arithmeticExpr_lr,assignmentStmt,booleanConst,caseStmt,conditionalStmt,datatype,declareStmt,default_nt,driverModule,expression,factor,idList,idList_lr,index_nt,input_plist,input_plist_lr,ioStmt,iterativeStmt,logicalOp,lvalueARRStmt,lvalueIDStmt,module,moduleDeclaration,moduleDeclarations,moduleDef,moduleReuseStmt,one_more_opt,op1,op2,opt_expr,opt_expr_lr,optional,otherModules,output_plist,output_plist_lr,printOpt,program,range,rangeArr,relationalOp,ret,simpleStmt,statement,statements,term,term_lr,type,value,var,whichId,whichStmt};

enum tnt{AND,ARRAY,ASSIGNOP,BC,BO,BOOLEAN,BREAK,CASE,COLON,COMMA,DECLARE,DEF,DEFAULT,DIV,DRIVER,DRIVERDEF,DRIVERENDDEF,END,ENDDEF,EQ,FALSE,FOR,GE,GET_VALUE,GT,IN,INPUT,INTEGER,LE,LT,MINUS,MODULE,MUL,NE,NUM,OF,OR,PARAMETERS,PLUS,PRINT,PROGRAM,RANGEOP,REAL,RETURNS,RNUM,SEMICOL,SQBC,SQBO,START,SWITCH,TAKES,TRUE,USE,WHILE,WITH,arithmeticExpr,arithmeticExpr_lr,assignmentStmt,booleanConst,caseStmt,conditionalStmt,datatype,declareStmt,default_nt,driverModule,expression,factor,idList,idList_lr,index_nt,input_plist,input_plist_lr,ioStmt,iterativeStmt,logicalOp,lvalueARRStmt,lvalueIDStmt,module,moduleDeclaration,moduleDeclarations,moduleDef,moduleReuseStmt,one_more_opt,op1,op2,opt_expr,opt_expr_lr,optional,otherModules,output_plist,output_plist_lr,printOpt,program,range,rangeArr,relationalOp,ret,simpleStmt,statement,statements,term,term_lr,type,value,var,whichId,whichStmt};