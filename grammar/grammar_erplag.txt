program -> moduleDeclarations otherModules driverModule otherModules
moduleDeclarations -> moduleDeclaration moduleDeclarations 
moduleDeclarations -> EPS
moduleDeclaration -> DECLARE MODULE ID SEMICOL
otherModules -> module otherModules 
otherModules -> EPS
driverModule -> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF moduleDef
module -> DEF MODULE ID ENDDEF TAKES INPUT SQBO input_plist SQBC SEMICOL ret moduleDef
ret -> RETURNS SQBO output_plist SQBC SEMICOL 
ret -> EPS
input_plist_lr -> COMMA ID COLON dataType input_plist_lr 
input_plist_lr -> EPS
input_plist -> ID COLON dataType input_plist_lr
output_plist_lr -> COMMA ID COLON type output_plist_lr 
output_plist_lr -> EPS
output_plist -> ID COLON type output_plist_lr
datatype -> INTEGER 
datatype -> REAL 
datatype -> BOOLEAN 
datatype -> ARRAY SQBO rangeArr SQBC OF type
rangeArr -> index_nt RANGEOP index_nt
type -> INTEGER 
type -> REAL 
type -> BOOLEAN
moduleDef -> START statements END
statements -> statement statements 
statements -> EPS
statement -> ioStmt 
statement -> simpleStmt 
statement -> declareStmt 
statement -> conditionalStmt 
statement -> iterativeStmt
ioStmt -> GET_VALUE BO ID BC SEMICOL 
ioStmt -> PRINT BO printOpt BC SEMICOL
var -> ID whichId 
var -> NUM
var -> RNUM
whichId -> SQBO index_nt SQBC 
whichId -> EPS
printOpt -> booleanConst
printOpt -> var
simpleStmt -> assignmentStmt 
simpleStmt -> moduleReuseStmt
assignmentStmt -> ID whichStmt
whichStmt -> lvalueIDStmt 
whichStmt -> lvalueARRStmt
lvalueIDStmt -> ASSIGNOP expression SEMICOL
lvalueARRStmt -> SQBO index_nt SQBC ASSIGNOP expression SEMICOL
index_nt -> NUM 
index_nt -> ID
moduleReuseStmt -> optional USE MODULE ID WITH PARAMETERS idList SEMICOL
optional -> SQBO idList SQBC ASSIGNOP 
optional -> EPS
idList_lr -> COMMA ID idList_lr 
idList_lr -> EPS
idList -> ID idList_lr 
expression -> unaryExpression
expression -> arithmeticOrBooleanExpression
unaryExpression -> MINUS unary_opt
unaryExpression -> PLUS unary_opt
unary_opt -> BO arithmeticExpr BC
unary_opt -> var
arithmeticOrBooleanExpression -> opt_expr opt_expr_lr
opt_expr_lr -> logicalOp opt_expr opt_expr_lr
opt_expr_lr -> EPS
opt_expr -> arithmeticExpr one_more_opt
opt_expr -> booleanConst
one_more_opt -> relationalOp arithmeticExpr one_more_opt
one_more_opt -> EPS
booleanConst -> true
booleanConst -> false
arithmeticExpr_lr -> op1 term arithmeticExpr_lr 
arithmeticExpr_lr -> EPS
arithmeticExpr -> term arithmeticExpr_lr
term_lr -> op2 factor term_lr 
term_lr -> EPS
term -> factor term_lr
factor -> BO arithmeticExpr BC 
factor -> var
op -> PLUS 
op -> MINUS 
op -> MUL 
op -> DIV
op1 -> PLUS 
op1 -> MINUS
op2 -> MUL 
op2 -> DIV
logicalOp -> AND 
logicalOp -> OR
relationalOp -> LT 
relationalOp -> LE 
relationalOp -> GT 
relationalOp -> GE 
relationalOp -> EQ 
relationalOp -> NE
declareStmt -> DECLARE idList COLON dataType SEMICOL
value -> NUM 
value -> TRUE 
value -> FALSE
caseStmts -> CASE value COLON statements BREAK SEMICOL caseStmt
caseStmt -> CASE value COLON statements BREAK SEMICOL caseStmt
caseStmt -> EPS
default_nt -> DEFAULT COLON statements BREAK SEMICOL 
default_nt -> EPS
conditionalStmt -> SWITCH BO ID BC START caseStmts default_nt END
range -> NUM RANGEOP NUM
iterativeStmt -> FOR BO ID IN range BC START statements END 
iterativeStmt -> WHILE BO arithmeticOrBooleanExpression BC START statements END